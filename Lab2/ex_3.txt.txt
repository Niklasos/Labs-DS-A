Exercise 3:
1. Input array is sorted in descending order:
	Merge sort because descending order is worst case scenario for insertion sort. This means that it is O(n^2) for
	for insertion sort while the time complexity for mergesort is O(n log(n)). Therefore mergesort is faster.

2. Input array is sorted in ascending order:
	Insertion sort because ascending order is best case scenario for insertion sort. The time complexity for best case
	for insertion sort is Ω(n) while it is Ω(n log(n)) for merge sort.
	
3. All elements in the array are the same:
	Insertion sort because this also is best case scenario for the insertion sort.

3. There are both positive and negative numbers in the array:
	Merge sort because the average time complexity for merge sort is better than insertion sort. 
	Insertion sort avg = Θ(n^2) merge sort avg = Θ(n log(n))


Niklas Olsson
950405
